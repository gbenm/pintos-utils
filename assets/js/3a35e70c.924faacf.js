"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[390],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7693:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:4},i="Archivo pintos.checker.cjs",s={unversionedId:"github-action/pintos-checker-file",id:"github-action/pintos-checker-file",title:"Archivo pintos.checker.cjs",description:"Qu\xe9 es?",source:"@site/docs/github-action/pintos-checker-file.md",sourceDirName:"github-action",slug:"/github-action/pintos-checker-file",permalink:"/pintos-utils/github-action/pintos-checker-file",draft:!1,editUrl:"https://github.com/gbenm/pintos-utils/tree/main/docs/github-action/pintos-checker-file.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"github-action",previous:{title:"Configuraci\xf3n",permalink:"/pintos-utils/github-action/config"},next:{title:"Ver los resultados",permalink:"/pintos-utils/github-action/result"}},c={},l=[{value:"Qu\xe9 es?",id:"qu\xe9-es",level:2},{value:"Configurar cu\xe1ndo se debe fallar",id:"configurar-cu\xe1ndo-se-debe-fallar",level:2}],u={toc:l};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"archivo-pintoscheckercjs"},"Archivo pintos.checker.cjs"),(0,o.kt)("h2",{id:"qu\xe9-es"},"Qu\xe9 es?"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Si hab\xeda usado pintos checker antes, probablemente tenga el archivo pintos.checker.mjs,\npero el comportamiento no difiere, sigue siendo lo mismo, simplemente se mud\xf3 a CommonJS.")),(0,o.kt)("p",null,"Este archivo le permite definir cu\xe1ndo deben fallar las pruebas, por defecto no fallan a menos que no se produzca ninguna salida o bien que la expresi\xf3n regular para extraer la nota no funcione (esperemos que esto no suceda xD)."),(0,o.kt)("p",null,"El archivo est\xe1 escrito en Javascript, pero no se preocupe si no sabe, s\xf3lo define condiciones para que sean exitosos sus tests."),(0,o.kt)("h2",{id:"configurar-cu\xe1ndo-se-debe-fallar"},"Configurar cu\xe1ndo se debe fallar"),(0,o.kt)("p",null,"Suponga que ya ha completado la fase de threads, y se encuentra en la de userprog, de la cu\xe1l ya lleva 60 y sabe que no deber\xeda bajar su nota, entonces puede modificar este archivo para que luzca:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"{2,6}","{2,6}":!0},"function threads(grade, total) {\n  return grade >= 100\n}\n\nfunction userprog(grade, total) {\n  return grade >= 60\n}\n")),(0,o.kt)("p",null,"Con lo anterior est\xe1 definiendo que si su fase 1 baja de 100 (si quiere puede colocar == en vez de >=)\no su fase 2 baja del 60 que ya tiene, esos test deben fallar (cu\xe1ndo fallan los test, Github env\xeda un\ncorreo) lo que le notificar\xeda que algo no anda bien, note que en el caso de ",(0,o.kt)("strong",{parentName:"p"},"userprog")," si es necesario\ncolocar ",(0,o.kt)("inlineCode",{parentName:"p"},">=")," ya que si no, esta condici\xf3n no ser\xeda verdadera, cu\xe1ndo aumente la nota :)."))}p.isMDXComponent=!0}}]);