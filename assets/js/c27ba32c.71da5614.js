"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[338],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>m});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},u=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(a),m=r,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return a?t.createElement(g,s(s({ref:n},u),{},{components:a})):t.createElement(g,s({ref:n},u))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6966:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=a(7462),r=(a(7294),a(3905));const o={sidebar_position:3},s="Configuraci\xf3n",i={unversionedId:"github-action/config",id:"github-action/config",title:"Configuraci\xf3n",description:"Cambiar cuando se ejecutan los test",source:"@site/docs/github-action/config.md",sourceDirName:"github-action",slug:"/github-action/config",permalink:"/pintos-utils/github-action/config",draft:!1,editUrl:"https://github.com/gbenm/pintos-utils/tree/main/docs/github-action/config.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"github-action",previous:{title:"Instalaci\xf3n",permalink:"/pintos-utils/github-action/install"},next:{title:"Archivo pintos.checker.cjs",permalink:"/pintos-utils/github-action/pintos-checker-file"}},c={},l=[{value:"Cambiar cuando se ejecutan los test",id:"cambiar-cuando-se-ejecutan-los-test",level:2},{value:"Configuraciones para casos extremos",id:"configuraciones-para-casos-extremos",level:2},{value:"Configurar directorio de c\xf3digo",id:"configurar-directorio-de-c\xf3digo",level:3},{value:"Configurar comando make",id:"configurar-comando-make",level:3},{value:"Configurar carpeta de scripts",id:"configurar-carpeta-de-scripts",level:3}],u={toc:l};function p(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,t.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuraci\xf3n"},"Configuraci\xf3n"),(0,r.kt)("h2",{id:"cambiar-cuando-se-ejecutan-los-test"},"Cambiar cuando se ejecutan los test"),(0,r.kt)("p",null,"Hay una carpeta oculta sobre su repositorio, esta se llama ",(0,r.kt)("strong",{parentName:"p"},".github,")," lo que debe modificar es el archivo .github/workflows/grade.yml"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(9294).Z,width:"868",height:"557"})),(0,r.kt)("p",null,"Y luego en los arreglos que ve en la imagen agregar sus ramas, claro tambi\xe9n puede eliminar si hay ramas que no usa o bien no quiere que desencadenen las acciones."),(0,r.kt)("p",null,"Si opta por ejecutar sobre todos los commits y pull request coloque lo siguiente (recomendado si el repositorio es p\xfablico):"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(707).Z,width:"868",height:"557"})),(0,r.kt)("h2",{id:"configuraciones-para-casos-extremos"},"Configuraciones para casos extremos"),(0,r.kt)("h3",{id:"configurar-directorio-de-c\xf3digo"},"Configurar directorio de c\xf3digo"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(9254).Z,width:"1362",height:"738"})),(0,r.kt)("p",null,"En el caso anterior toca realizar la configuraci\xf3n porque el repositorio tiene el c\xf3digo dentro de la carpeta ",(0,r.kt)("strong",{parentName:"p"},"src"),". Abra el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},".github/workflows/grade.yml")," y modifique las 4 ocurrencias de ",(0,r.kt)("strong",{parentName:"p"},"root"),", por el directorio que contiene su c\xf3digo, en el caso del ejemplo anterior ser\xeda ",(0,r.kt)("strong",{parentName:"p"},"src"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{21}","{21}":!0},'name: \'Calificaci\xf3n de las fases del proyecto\'\non:\n  push:\n    branches: [ "main", "master", "develop" ]\n  pull_request:\n    branches: [ "main", "master", "develop" ]\njobs:\n  threads:\n    name: \'Fase: Threads\'\n    runs-on: \'ubuntu-latest\'\n    env:\n      phase: \'threads\'\n    steps:\n      - name: \'Clonando repositorio\'\n        uses: \'actions/checkout@v2\'\n      - name: Pintos Checker\n        id: phase\n        uses: gbenm/pintos-checker@v1\n        with:\n            phase: "${{ env.phase }}"\n            root: "src" # este de ac\xe1!! (antes ten\xeda un .)\n            utils_path: "utils"\n            make: "make clean && make && make grade"\n      - name: \'Show results\'\n        run: \'echo "${{ steps.phase.outputs.results }}"\'\n')),(0,r.kt)("h3",{id:"configurar-comando-make"},"Configurar comando make"),(0,r.kt)("p",null,"Si en dado caso no funciona el evaluador por culpa de alg\xfan mensaje de make (cambiaron la implementaci\xf3n los de Stanford) o porque quiere poner un comando personalizado para correr los tests, modifque las 4 ocurrencias de ",(0,r.kt)("strong",{parentName:"p"},"make")," por su comando personalizado."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{23}","{23}":!0},'name: \'Calificaci\xf3n de las fases del proyecto\'\non:\n  push:\n    branches: [ "main", "master", "develop" ]\n  pull_request:\n    branches: [ "main", "master", "develop" ]\njobs:\n  threads:\n    name: \'Fase: Threads\'\n    runs-on: \'ubuntu-latest\'\n    env:\n      phase: \'threads\'\n    steps:\n      - name: \'Clonando repositorio\'\n        uses: \'actions/checkout@v2\'\n      - name: Pintos Checker\n        id: phase\n        uses: gbenm/pintos-checker@v1\n        with:\n            phase: "${{ env.phase }}"\n            root: "."\n            utils_path: "utils"\n            make: "mycustom .." # modifique esta l\xednea\n')),(0,r.kt)("h3",{id:"configurar-carpeta-de-scripts"},"Configurar carpeta de scripts"),(0,r.kt)("p",null,"Si por alguna raz\xf3n la carpeta de scripts ya no se llama ",(0,r.kt)("strong",{parentName:"p"},"utils"),", cambie las 4 ocurrencias de ",(0,r.kt)("strong",{parentName:"p"},"utils","_","path")," por el directorio relativo a ",(0,r.kt)("strong",{parentName:"p"},"root"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{22}","{22}":!0},'name: \'Calificaci\xf3n de las fases del proyecto\'\non:\n  push:\n    branches: [ "main", "master", "develop" ]\n  pull_request:\n    branches: [ "main", "master", "develop" ]\njobs:\n  threads:\n    name: \'Fase: Threads\'\n    runs-on: \'ubuntu-latest\'\n    env:\n      phase: \'threads\'\n    steps:\n      - name: \'Clonando repositorio\'\n        uses: \'actions/checkout@v2\'\n      - name: Pintos Checker\n        id: phase\n        uses: gbenm/pintos-checker@v1\n        with:\n            phase: "${{ env.phase }}"\n            root: "."\n            utils_path: "utils" # cambie la ruta\n            make: "make clean && make && make grade"\n')))}p.isMDXComponent=!0},707:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/github-grade-all-de1ec72321c85d832fd3c305296e77fb.png"},9294:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/grade-branches-61d8d9598ff7650bb5fafa7d31bce7eb.png"},9254:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/pintos-with-src-folder-ccc4980056cb39c4886939e3d4445f01.png"}}]);